{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://extension-bookmark/./src/background/background.ts"],"sourcesContent":["chrome.runtime.onInstalled.addListener(() => {\r\n  console.log('I just installed my chrome extension');\r\n})\r\n\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  console.log('Extension installed');\r\n});\r\n\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === 'storeBookmark') {\r\n    const { bookmarkData } = request;\r\n    console.log('Received Bookmark Data:', bookmarkData);\r\n    sendResponse({ message: 'Bookmark data received successfully' });\r\n  }\r\n});\r\n\r\nlet bookmarks = {};\r\n\r\nchrome.storage.local.get('bookmarks', function (result) {\r\n  bookmarks = result.bookmarks || {};\r\n});\r\n\r\n\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === 'storeBookmark') {\r\n    const { uniqueName, url } = request.bookmarkData;\r\n    if (bookmarks[uniqueName]) {\r\n      bookmarks[uniqueName].url = url;\r\n    } else {\r\n      bookmarks[uniqueName] = { url };\r\n    }\r\n\r\n    chrome.storage.local.set({ bookmarks }, () => {\r\n      sendResponse({ message: 'Bookmark data updated successfully' });\r\n    });\r\n\r\n    return true;\r\n  } else if (request.action === 'getBookmarks') {\r\n    sendResponse({ bookmarks });\r\n  } else if (request.action === 'shortcutDeleted') {\r\n    const { shortcut } = request;\r\n\r\n    delete bookmarks[shortcut];\r\n\r\n    chrome.storage.local.set({ bookmarks }, () => {\r\n      console.log(`Bookmark ${shortcut} deleted`);\r\n      sendResponse({ message: `Bookmark ${shortcut} deleted successfully` });\r\n    });\r\n\r\n    return true;\r\n  }\r\n});\r\n\r\nchrome.omnibox.onInputChanged.addListener((text, suggest) => {\r\n  const suggestions = [];\r\n\r\n  for (const uniqueName in bookmarks) {\r\n    if (uniqueName.includes(text)) {\r\n      suggestions.push({\r\n        content: uniqueName,\r\n        description: bookmarks[uniqueName].url\r\n      });\r\n    }\r\n  }\r\n\r\n  suggest(suggestions);\r\n});\r\n\r\nchrome.omnibox.onInputEntered.addListener((text, disposition) => {\r\n  const trimmedText = text.trim().toLowerCase();\r\n\r\n  if (trimmedText in bookmarks) {\r\n    chrome.tabs.update({ url: bookmarks[trimmedText].url });\r\n  } else {\r\n    const searchUrl = `https://www.google.com/search?q=${encodeURIComponent(text)}`;\r\n    chrome.tabs.update({ url: searchUrl });\r\n  }\r\n});\r\n"],"names":[],"sourceRoot":""}